let achatsEnCours = false;
let idFactureCurrent = null;

document.addEventListener("DOMContentLoaded", function () {
    console.log("achat.js est chargé !");
    getLastFactureId(); // Récupérer l'ID de la dernière facture
    fetchAchatsGlobal(); // Charger tous les achats au démarrage

    // Modification d'une vente
    document.getElementById("updateAchatForm").addEventListener("submit", function (event) {
        event.preventDefault();
    
        if (confirm("Voulez-vous vraiment modifier cette vente ? Vérifiez les informations avant validation.")) {
            let formData = {
                id_vente: document.getElementById("id_vente_update").value,
                id_client: document.getElementById("id_client_update").value,
                id_employe: document.getElementById("id_employe_update").value,
                id_facture: document.getElementById("id_facture_update").value,
                id_vehicule: document.getElementById("id_vehicule_update").value,
                quantite: document.getElementById("quantite_update").value,
                date_vente: document.getElementById("date_vente_update").value,
                prix_total: document.getElementById("prix_total_update").value
            };
    
            fetch("http://localhost/Gestion_Vente/php/gestion/achat.php?action=update", {
                method: "POST",
                headers: { "Content-Type": "application/json" },
                body: JSON.stringify(formData)
            }).then(response => response.json()).then(data => {
                if (data.success) {
                    fetchAchats();
                    alert("Vente modifiée avec succès !");
                } else {
                    alert("Erreur lors de la modification.");
                }
            });
        }
    });
});

// Fonction pour afficher tous les achats
function fetchAchatsGlobal() {
    fetch("http://localhost/Gestion_Vente/php/gestion/achat.php?action=read")
        .then(response => response.json())
        .then(ventes => {
            console.log("Tous les achats :", ventes);
            let tableBody = document.getElementById("achatsTable");
            tableBody.innerHTML = "";

            if (!ventes || ventes.length === 0) {
                tableBody.innerHTML = "<tr><td colspan='12'>Aucun achat trouvé</td></tr>";
                return;
            }

            ventes.forEach(v => {
                tableBody.innerHTML += `
                    <tr>
                        <td>${v.id_vente}</td>
                        <td>${v.id_client}</td>
                        <td>${v.id_employe}</td>
                        <td>${v.id_facture}</td>
                        <td>${v.id_vehicule}</td>
                        <td>${v.date_vente}</td>
                        <td>${v.categorie}</td>
                        <td>${v.marque}</td>
                        <td>${v.model}</td>
                        <td>${v.quantite}</td>
                        <td>${v.prix_total}</td>
                        <td>
                            <button class="update" onclick="fillUpdateForm(${v.id_vente}, ${v.id_client}, ${v.id_employe}, ${v.id_facture}, ${v.id_vehicule}, ${v.quantite}, '${v.date_vente}', ${v.prix_total})">Modifier</button>
                            <button class="delete" onclick="deleteAchat(${v.id_vente})">Supprimer</button>
                        </td>
                    </tr>
                `;
            });

            afficherBoutonsAction(false); // Cacher les boutons au démarrage
        })
        .catch(error => console.error("Erreur AJAX :", error));
}

// Fonction pour afficher les achats liés à la facture actuelle
function fetchAchatsFacture() {
    if (!idFactureCurrent) return;

    fetch(`http://localhost/Gestion_Vente/php/gestion/achat.php?action=read&id_facture=${idFactureCurrent}`)
        .then(response => response.json())
        .then(ventes => {
            console.log("Achats pour la facture actuelle :", ventes);
            let tableBody = document.getElementById("achatsTable");
            tableBody.innerHTML = "";

            if (!ventes || ventes.length === 0) {
                tableBody.innerHTML = "<tr><td colspan='12'>Aucune vente pour cette facture</td></tr>";
                return;
            }

            ventes.forEach(v => {
                tableBody.innerHTML += `
                    <tr>
                        <td>${v.id_vente}</td>
                        <td>${v.id_client}</td>
                        <td>${v.id_employe}</td>
                        <td>${v.id_facture}</td>
                        <td>${v.id_vehicule}</td>
                        <td>${v.date_vente}</td>
                        <td>${v.categorie}</td>
                        <td>${v.marque}</td>
                        <td>${v.model}</td>
                        <td>${v.quantite}</td>
                        <td>${v.prix_total}</td>
                        <td>
                            <button class="update" onclick="fillUpdateForm(${v.id_vente}, ${v.id_client}, ${v.id_employe}, ${v.id_facture}, ${v.id_vehicule}, ${v.quantite}, '${v.date_vente}', ${v.prix_total})">Modifier</button>
                            <button class="delete" onclick="deleteAchat(${v.id_vente})">Supprimer</button>
                        </td>
                    </tr>
                `;
            });

            afficherBoutonsAction(true); // Afficher les boutons après ajout
        })
        .catch(error => console.error("Erreur AJAX :", error));
}

// Fonction pour afficher/cacher les boutons "Valider" et "Annuler"
function afficherBoutonsAction(activer) {
    document.getElementById("validerFacture").style.display = activer ? "block" : "none";
    document.getElementById("annulerFacture").style.display = activer ? "block" : "none";
}

// Fonction pour récupérer l'ID de la dernière facture
function getLastFactureId() {
    fetch("http://localhost/Gestion_Vente/php/gestion/achat.php?action=getLastFacture")
        .then(response => response.json())
        .then(data => {
            idFactureCurrent = data.id_facture;
            document.getElementById("id_facture").value = idFactureCurrent;
        })
        .catch(error => console.error("Erreur lors de la récupération de l'ID Facture :", error));
}

// Ajout d'une vente
document.getElementById("addAchatForm").addEventListener("submit", function (event) {
    event.preventDefault();

    if (confirm("Voulez-vous vraiment ajouter cette vente ? Vérifiez les informations avant validation.")) {
        let formData = {
            id_client: document.getElementById("id_client").value,
            id_employe: document.getElementById("id_employe").value,
            id_facture: document.getElementById("id_facture").value,
            id_vehicule: document.getElementById("id_vehicule").value,
            quantite: document.getElementById("quantite").value,
            date_vente: document.getElementById("date_vente").value,
            prix_total: document.getElementById("prix_total").value
        };

        fetch("http://localhost/Gestion_Vente/php/gestion/achat.php?action=create", {
            method: "POST",
            headers: { "Content-Type": "application/json" },
            body: JSON.stringify(formData)
        }).then(response => response.json()).then(data => {
            if (data.success) {
                achatsEnCours = true; // Activer l'affichage des achats de la facture
                fetchAchatsFacture(); // Charger les achats liés à la facture actuelle
                document.getElementById("addAchatForm").reset();
                alert("Vente ajoutée avec succès !");
            } else {
                alert("Erreur lors de l'ajout.");
            }
        });
    }
});

// Validation de la facture
document.getElementById("validerFacture").addEventListener("click", function () {
    fetchAchatsGlobal();
    achatsEnCours = false;
    afficherBoutonsAction(false);
});

// Annulation de la facture
document.getElementById("annulerFacture").addEventListener("click", function () {
    fetchAchatsGlobal();
    achatsEnCours = false;
    afficherBoutonsAction(false);
});

// Fonction pour récupérer l'ID de la dernière facture
function getLastFactureId() {
    fetch("http://localhost/Gestion_Vente/php/gestion/achat.php?action=getLastFacture")
        .then(response => response.json())
        .then(data => {
            document.getElementById("id_facture").value = data.id_facture;
            console.log("ID Facture généré :", data.id_facture);
        })
        .catch(error => console.error("Erreur lors de la récupération de l'ID Facture :", error));
}

// Fonction pour remplir le formulaire de modification
function fillUpdateForm(id_vente, id_client, id_employe, id_facture, id_vehicule, quantite, date_vente, prix_total) {
    console.log("Valeurs reçues pour modification :", id_vente, id_employe, id_facture, prix_total);

    document.getElementById("id_vente_update").value = id_vente;
    document.getElementById("id_client_update").value = id_client;
    document.getElementById("id_employe_update").value = id_employe;
    document.getElementById("id_facture_update").value = id_facture;
    document.getElementById("id_vehicule_update").value = id_vehicule;
    document.getElementById("quantite_update").value = quantite;
    document.getElementById("date_vente_update").value = date_vente;
    document.getElementById("prix_total_update").value = prix_total;

    document.getElementById("updateAchatForm").scrollIntoView({ behavior: "smooth", block: "start" });
}

/*
// Fonction pour récupérer et afficher les ventes
function fetchAchats() {
    fetch("http://localhost/Gestion_Vente/php/gestion/achat.php?action=read")
        .then(response => response.json())
        .then(ventes => {
            console.log("Données reçues :", ventes);
            let tableBody = document.getElementById("achatsTable");
            tableBody.innerHTML = "";

            if (!ventes || ventes.length === 0) {
                tableBody.innerHTML = "<tr><td colspan='12'>Aucune vente trouvée</td></tr>";
                return;
            }

            ventes.forEach(v => {
                tableBody.innerHTML += `
                    <tr>
                        <td>${v.id_vente}</td>
                        <td>${v.id_client}</td>
                        <td>${v.id_employe}</td>
                        <td>${v.id_facture}</td>
                        <td>${v.id_vehicule}</td>
                        <td>${v.date_vente}</td>
                        <td>${v.categorie}</td>
                        <td>${v.marque}</td>
                        <td>${v.model}</td>
                        <td>${v.quantite}</td>
                        <td>${v.prix_total}</td>
                        <td>
                            <button class="update" onclick="fillUpdateForm(${v.id_vente}, ${v.id_client}, ${v.id_employe}, ${v.id_facture}, ${v.id_vehicule}, ${v.quantite}, '${v.date_vente}', ${v.prix_total})">Modifier</button>
                            <button class="delete" onclick="deleteAchat(${v.id_vente})">Supprimer</button>
                        </td>
                    </tr>
                `;
            });
        })
        .catch(error => console.error("Erreur AJAX :", error));
}
*/

/*
document.addEventListener("DOMContentLoaded", function () {
    console.log("achat.js est chargé !");
    
    // Récupérer l'ID de la dernière facture et charger les achats
    getLastFactureId();
    fetchAchats();

    // Ajout d'une vente
    document.getElementById("addAchatForm").addEventListener("submit", function (event) {
        event.preventDefault();
    
        if (confirm("Voulez-vous vraiment ajouter cette vente ? Vérifiez les informations avant validation.")) {
            let formData = {
                id_client: document.getElementById("id_client").value,
                id_employe: document.getElementById("id_employe").value,
                id_facture: document.getElementById("id_facture").value,
                id_vehicule: document.getElementById("id_vehicule").value,
                quantite: document.getElementById("quantite").value,
                date_vente: document.getElementById("date_vente").value,
                prix_total: document.getElementById("prix_total").value
            };
    
            fetch("http://localhost/Gestion_Vente/php/gestion/achat.php?action=create", {
                method: "POST",
                headers: { "Content-Type": "application/json" },
                body: JSON.stringify(formData)
            }).then(response => response.json()).then(data => {
                if (data.success) {
                    fetchAchats();
                    getLastFactureId(); // 🔹 Recharger `id_facture` pour le prochain ajout
                    document.getElementById("addAchatForm").reset();
                    alert("Vente ajoutée avec succès !");
                } else {
                    alert("Erreur lors de l'ajout.");
                }
            });
        }
    });

    // Modification d'une vente
    document.getElementById("updateAchatForm").addEventListener("submit", function (event) {
        event.preventDefault();
    
        if (confirm("Voulez-vous vraiment modifier cette vente ? Vérifiez les informations avant validation.")) {
            let formData = {
                id_vente: document.getElementById("id_vente_update").value,
                id_client: document.getElementById("id_client_update").value,
                id_employe: document.getElementById("id_employe_update").value,
                id_facture: document.getElementById("id_facture_update").value,
                id_vehicule: document.getElementById("id_vehicule_update").value,
                quantite: document.getElementById("quantite_update").value,
                date_vente: document.getElementById("date_vente_update").value,
                prix_total: document.getElementById("prix_total_update").value
            };
    
            fetch("http://localhost/Gestion_Vente/php/gestion/achat.php?action=update", {
                method: "POST",
                headers: { "Content-Type": "application/json" },
                body: JSON.stringify(formData)
            }).then(response => response.json()).then(data => {
                if (data.success) {
                    fetchAchats();
                    alert("Vente modifiée avec succès !");
                } else {
                    alert("Erreur lors de la modification.");
                }
            });
        }
    });
});
*/